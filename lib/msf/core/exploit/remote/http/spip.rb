# -*- coding: binary -*-

module Msf
module Exploit::Remote::HTTP::Spip

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super

    register_options([
      OptString.new('TARGETURI', [true, 'Path to Spip install', '/'])
    ])
  end

  # Determine Spip version
  #
  # @return [Rex::Version] Version as Rex::Version
  def spip_version
    res = send_request_cgi(
      'method' => 'GET',
      'uri'    => normalize_uri(target_uri.path, "spip.php")
    )

    return unless res

    version = nil

    version_string = res.get_html_document.at('head/meta[@name="generator"]/@content')&.text
    if version_string =~ /SPIP (.*)/
      version = ::Regexp.last_match(1)
    end

    if version.nil? && res.headers['Composed-By'] =~ /SPIP (.*) /
      version = ::Regexp.last_match(1)
    end

    if version.nil?
      return nil
    end

    return Rex::Version.new(version)
  end

end
end
